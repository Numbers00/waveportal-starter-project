{"version":3,"sources":["App.js","index.js"],"names":["App","useState","runConfetti","setRunConfetti","cryptosValue","setCryptosValue","confetti","useRef","upperContainer","wordCloudContainer","defaultContainerHeader","defaultContainer","defaultContainerText","waveBtn","cryptosInput","useWindowSize","wWidth","wHeight","pos","top","left","x","y","mouseDownHandler","e","current","style","cursor","userSelect","scrollLeft","scrollTop","clientX","clientY","document","addEventListener","mouseMoveHandler","mouseUpHandler","useEffect","dx","dy","removeEventListener","removeProperty","wordCount","split","forEach","word","lowerCased","trim","toLowerCase","Object","keys","includes","wordCloudData","entries","map","entry","text","value","schemeCategory10ScaleOrdinal","scaleOrdinal","schemeCategory10","className","ref","width","height","numberOfPieces","gravity","recycle","run","tweenDuration","data","font","fontWeight","fontSize","Math","log2","spiral","rotate","random","padding","fill","d","i","onWordClick","event","console","log","onWordMouseOver","onWordMouseOut","onClick","classList","add","textContent","disabled","setTimeout","display","remove","focus","Form","Control","onChange","target","onKeyUp","key","length","type","placeholder","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.740e2b18.chunk.js","sourcesContent":["import { ethers } from 'ethers';\r\nimport Form from 'react-bootstrap/Form';\r\nimport * as d3 from 'd3';\r\nimport WordCloud from 'react-d3-cloud';\r\nimport { scaleOrdinal } from 'd3-scale';\r\nimport { schemeCategory10 } from 'd3-scale-chromatic';\r\nimport useWindowSize from 'react-use/lib/useWindowSize';\r\nimport Confetti from 'react-confetti';\r\n\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef\r\n} from 'react';\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [runConfetti, setRunConfetti] = useState(false);\r\n  const [cryptosValue, setCryptosValue] = useState('');\r\n\r\n  const confetti = useRef(null);\r\n  const upperContainer = useRef(null);\r\n  const wordCloudContainer = useRef(null);\r\n  const defaultContainerHeader = useRef(null);\r\n  const defaultContainer = useRef(null);\r\n  const defaultContainerText = useRef(null);\r\n  const waveBtn = useRef(null);\r\n  const cryptosInput = useRef(null);\r\n\r\n  const { wWidth, wHeight } = useWindowSize();\r\n\r\n  const wave = () => {\r\n    setRunConfetti(true);\r\n\r\n    defaultContainer.current.classList.add('waved');\r\n    defaultContainerHeader.current.textContent = 'ðŸ‘‹ Just a bit more!'\r\n    defaultContainerText.current.textContent = `\r\n      Hey there! Can I ask you to write down the cryptocurrencies\r\n      you use in the text input below? Separate them by commas!\r\n    `;\r\n\r\n    waveBtn.current.classList.add('waved');\r\n    waveBtn.current.disabled = true;\r\n    setTimeout(() => {\r\n      waveBtn.current.style.display = 'none';\r\n      cryptosInput.current.classList.remove('d-none');\r\n    }, 333);\r\n    cryptosInput.current.disabled = true;\r\n    setTimeout(() => {\r\n      cryptosInput.current.disabled = false;\r\n      cryptosInput.current.focus();\r\n\r\n      confetti.current.remove();\r\n    }, 3000);\r\n  }\r\n\r\n  const handleCryptosSubmit = () => {\r\n    if (cryptosValue.length > 0) {\r\n      setCryptosValue('');\r\n      cryptosInput.current.classList.add('d-none');\r\n      defaultContainer.current.classList.add('answered');\r\n      wordCloudContainer.current.style.display = 'block';\r\n\r\n      defaultContainer.current.classList.remove('waved');\r\n      defaultContainerHeader.current.textContent = 'ðŸ‘‹ Thanks for answering!'\r\n      defaultContainerText.current.textContent = `\r\n        Thanks for answering! See the word cloud above to see which answer's most popular, or\r\n        scroll further below to see what others have answered in the past!\r\n      `;\r\n    }\r\n  }\r\n\r\n  // code adapted from and thanks to https://htmldom.dev/drag-to-scroll/\r\n  let pos = { top: 0, left: 0, x: 0, y: 0 };\r\n  const mouseDownHandler = (e) => {\r\n    wordCloudContainer.current.style.cursor = 'grabbing';\r\n    wordCloudContainer.current.style.userSelect = 'none';\r\n\r\n    pos = {\r\n        // The current scroll\r\n        left: wordCloudContainer.current.scrollLeft,\r\n        top: wordCloudContainer.current.scrollTop,\r\n        // Get the current mouse position\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n    };\r\n\r\n    document.addEventListener('mousemove', mouseMoveHandler);\r\n    document.addEventListener('mouseup', mouseUpHandler);\r\n  };\r\n\r\n  useEffect(() => {\r\n    wordCloudContainer.current.addEventListener('mousedown', mouseDownHandler);\r\n  }, []);\r\n\r\n  const mouseMoveHandler = function (e) {\r\n    // How far the mouse has been moved\r\n    const dx = e.clientX - pos.x;\r\n    const dy = e.clientY - pos.y;\r\n\r\n    // Scroll the element\r\n    wordCloudContainer.current.scrollTop = pos.top - dy;\r\n    wordCloudContainer.current.scrollLeft = pos.left - dx;\r\n  };\r\n\r\n  const mouseUpHandler = function () {\r\n    document.removeEventListener('mousemove', mouseMoveHandler);\r\n    document.removeEventListener('mouseup', mouseUpHandler);\r\n\r\n    wordCloudContainer.current.style.cursor = 'grab';\r\n    wordCloudContainer.current.style.removeProperty('user-select');\r\n  };\r\n\r\n  let wordCount = [];\r\n  const cryptosText = 'bitcoin,ethereum,bnb,xrp,cardano,solana,dogecoin,polkadot,shiba inu,avalanche,polygon,tron,uniswap,unus sed leo,ethereum classic,litecoin,ftx token,chainlink,near protocol,cronos,cosmos,stellar,monero,bitcoin cash,flow,algorand,vechain,filecoin,internet computer,apecoin,decentraland,the sandbox,tezos,eos,hedera,quant,elrond,theta network,axie infinity,aave,chiliz,okb,bitcoin sv,zcash';\r\n  const inputWords = cryptosText.split(/,/g);\r\n  inputWords.forEach(word => {\r\n    const lowerCased = word.trim().toLowerCase();\r\n    Object.keys(wordCount).includes(lowerCased)\r\n      ? wordCount[lowerCased]++\r\n      : wordCount[lowerCased] = 1;\r\n  });\r\n  const wordEntries = Object.entries(wordCount);\r\n  const wordCloudData = wordEntries.map(entry => {\r\n    return {\r\n      text: entry[0],\r\n      value: entry[1] * 100\r\n    }\r\n  });\r\n\r\n  const schemeCategory10ScaleOrdinal = scaleOrdinal(schemeCategory10);\r\n\r\n  return (\r\n    <div className='main-container'>\r\n      <Confetti\r\n        ref={confetti}\r\n        width={wWidth}\r\n        height={wHeight}\r\n        numberOfPieces={2000}\r\n        gravity={0.6}\r\n        recycle={false}\r\n        run={runConfetti}\r\n        tweenDuration={10000}\r\n      />\r\n      <div className='upper-container' ref={upperContainer}>\r\n        <div className='word-cloud-container' ref={wordCloudContainer}>\r\n          <WordCloud\r\n            data={wordCloudData}\r\n            width={wWidth}\r\n            height={wHeight}\r\n            font=\"Segoe UI\"\r\n            fontWeight=\"bold\"\r\n            fontSize={(word) => Math.log2(word.value) * 5}\r\n            spiral=\"rectangular\"\r\n            rotate={() => ~~(Math.random() * 2) * 90}\r\n            // rotate={0}\r\n            padding={5}\r\n            random={Math.random}\r\n            fill={(d, i) => schemeCategory10ScaleOrdinal(i)}\r\n            onWordClick={(event, d) => {\r\n              console.log(`onWordClick: ${d.text}`);\r\n            }}\r\n            onWordMouseOver={(event, d) => {\r\n              console.log(`onWordMouseOver: ${d.text}`);\r\n            }}\r\n            onWordMouseOut={(event, d) => {\r\n              console.log(`onWordMouseOut: ${d.text}`);\r\n            }}\r\n          />\r\n        </div>\r\n        <div className='default-container' ref={defaultContainer}>\r\n          <div ref={defaultContainerHeader} className='default-container-header'>\r\n            ðŸ‘‹ Hey there!\r\n          </div>\r\n          <div ref={defaultContainerText} className='default-container-text'>\r\n            I am Numbers00 and I especially like all things web-related. I don't really know what to put here, but connect\r\n            your Ethereum wallet and try waving at me!\r\n          </div>\r\n          <button className='wave-button' ref={waveBtn} onClick={wave}>\r\n            Wave?\r\n          </button>\r\n          <Form.Control\r\n            ref={cryptosInput}\r\n            value={cryptosValue}\r\n            onChange={(e) => setCryptosValue(e.target.value)}\r\n            onKeyUp={(e) => e.key === 'Enter' ? handleCryptosSubmit() : null}\r\n            type='text'\r\n            className='cryptos-input d-none'\r\n            placeholder='bitcoin, ethereum, litecoin, solana, harmony'\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}